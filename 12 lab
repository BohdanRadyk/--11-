У наступному прикладі в циклі for виводяться на екран числа від 1 до 100: 
#include <stdio.h>
int main (void) {
int x;
for (x = 1; x <= 100; x ++)
printf ( "% d", x);
return 0;
}



Для прикладу наведена програма для виводу на екран степеня двійки до 1024
#include<stdio.h>
int main() {
int i=2;
while (i<=1024)
     {
         i = i*2;
         printf("%d\n",i);
     }
}




Програма демонструє виведення на екран значення числа k =50 
#include<stdio.h>
int main() {
int j=0,k=0;
while(j<5)
   {
k+=10;
j++;
    }
printf("k=%d\n",k);
}






Наступна програма демонструє виведення на екран значення чисел b,c,a. 
#include<stdio.h>
int main() {
int a=2, b=10,c;
do
{
b=b+a; c=10*a; a++;
}
while(a<5);
printf("\nb=%d c=%d a=%d",b,c,a);
}




Нижченаведена програма демонструє процес введення числа до того моменту, поки його значення не буде співпадати з магічним числом. 
#include<stdio.h>
#include<stdlib.h>
int main(void) {
int magic;
int guess;
magic=rand();
printf("vgaday chuslo:");
scanf("%d",&guess);
if(guess==magic){
printf("virno");
printf("magichne chuslo rivne %d",magic);
}
else {
printf("nevirno\n");
while (guess!=magic){
printf("vgaday chuslo:");
scanf("%d",&guess);
printf("nevirno\n");
}
}
}





Наступна програма після введення кожного числа здійснює підрахунок кількості спроб та виводить це значення.
#include<stdio.h>
#include<stdlib.h>
int main(void) {
int magic;
int guess;
int m=1;
magic=rand();

printf("vgaday chuslo:");
scanf("%d",&guess);
if(guess==magic){
printf("virno");
printf("magichne chuslo rivne %d",magic);
     }

else {
printf("nevirno\n");
printf("m=%d\n",m);
while (guess!=magic){
m++;
printf("vgaday chuslo:");
scanf("%d",&guess);
printf("nevirno\n");
printf("m=%d\n",m);
}
}
}





У наступній програмі введено обмеження на максимальну кількість спроб введення числа, яке дорівнює значенню рандомно згенерованого магічного числа. Після використання к-сті заданих спроб, виводиться значення магічного числа. \





#include <stdio.h>
#include <stdlib.h>

int main() {
    int fahr, celsius;
    int lower, upper, step;
    
    lower = 0;
    upper = 300;
    step = 20;
    fahr = lower;
    
    printf("Celsius\tFahrenheit\n");
    while (fahr <= upper) {
        celsius = 5 * (fahr - 32) / 9;
        printf("%7d\t%10d\n", fahr, celsius);
        fahr = fahr + step;
    }
    
    system("pause");
    return 0;
}






4.	Скласти програму для створення прямокутного трикутника із зірочок (*), при цьому трикутник має розміри: n рядків у висоту та n символів у ширину. Значення n вводиться з клавіатури. Скрін коду програми та результати її виконання представити у звіті.
#include <stdio.h>

int main() {
    int n;
    printf("Введіть висоту трикутника (кількість рядків): ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= i; j++) {
            printf("* ");
        }
        printf("\n");
    }

    return 0;
}





5.	Оформити звіт.
Висновок
На даній лабораторній роботі навчився використовувати умовні оператори та оператори переходу під час програмування на мові С.
