#include <stdio.h>
#include <math.h>

int main() {
    int N = 32;
    double y, min_value, max_value;
    int min_i, max_i;
    min_value = INFINITY;
    max_value = -INFINITY;
    printf(" i  |         y\n");
    printf("----|--------------------\n");
    for (int i = 0; i <= 31; i++) {
        y = i * i * exp(-i * i / 100.0) * sin(2 * M_PI * i / N);
        printf("%2d  | %0.10f\n", i, y);
        if (y < min_value) {
            min_value = y;
            min_i = i;
        }
        if (y > max_value) {
            max_value = y;
            max_i = i;
        }
    }
    printf("\nНайменше значення функції: y(%d) = %0.10f\n", min_i, min_value);
    printf("Найбільше значення функції: y(%d) = %0.10f\n", max_i, max_value);
    return 0;
}


#include <stdio.h>
#include <math.h>

void evaluate_machine_epsilon_float();
void evaluate_machine_epsilon_double();
void evaluate_machine_epsilon_long_double();

int main(void) {
    printf("Оцінка машинного нуля для типу float:\n");
    evaluate_machine_epsilon_float();

    printf("\nОцінка машинного нуля для типу double:\n");
    evaluate_machine_epsilon_double();

    printf("\nОцінка машинного нуля для типу long double:\n");
    evaluate_machine_epsilon_long_double();

    return 0;
}

void evaluate_machine_epsilon_float() {
    float precision = 1.0f, a;
    int i = 0;

    while (1) {
        precision /= 2.0f;
        a = precision + 1.0f;
        i++;
        if (a <= 1.0f) break;
    }

    printf("Число ділень на 2: %d\n", i);
    printf("Машинний нуль: %e\n", precision);
}

void evaluate_machine_epsilon_double() {
    double precision = 1.0, a;
    int i = 0;

    for (i = 0;; i++) {
        precision /= 2.0;
        a = precision + 1.0;
        if (a <= 1.0) break;
    }

    printf("Число ділень на 2: %d\n", i);
    printf("Машинний нуль: %le\n", precision);
}

void evaluate_machine_epsilon_long_double() {
    long double precision = 1.0L, a;
    int i = 0;
    
    do {
        precision /= 2.0L;
        a = precision + 1.0L;
        i++;
    } while (a > 1.0L);

    printf("Число ділень на 2: %d\n", i);
    printf("Машинний нуль: %Le\n", precision);
}




#include <stdio.h>

int main() {
    int height;
    printf("Введіть висоту трикутника: ");
    scanf("%d", &height);

    for (int i = 1; i <= height; i++) {
        for (int j = 1; j <= i; j++) {
            printf("*");
        }
        printf("\n");
    }

    return 0;





#include <stdio.h>
#include <math.h>

unsigned long long factorial(int n) {
    unsigned long long result = 1;
    for (int i = 1; i <= n; i++) {
        result *= i;
    }
    return result;
}

int main() {
    int N;
    printf("Введіть натуральне число N: ");
    scanf("%d", &N);

    double S = 0.0;
    for (int k = 1; k <= N; k++) {
        unsigned long long fact = factorial(k);
        double ln_fact = log((double)fact);
        S += k * k * ln_fact;
    }

    printf("Сума S = %.10lf\n", S);
    return 0;
}



#include <stdio.h>
#include <math.h>

#define EPSILON 0.00001
#define PI 3.141592653589793

double taylor_sin(double x, int *iterations) {
    double term = x;
    double sum = term;
    int n = 1;
    while (fabs(term) >= EPSILON) {
        term *= -x * x / ((2 * n) * (2 * n + 1));
        sum += term;
        n++;
    }
    *iterations = n;
    return sum;
}

int main() {
    double x;
    printf("Введіть значення x (0 ≤ x ≤ π): ");
    scanf("%lf", &x);

    if (x < 0 || x > PI) {
        printf("Помилка: x повинно бути в межах [0, π]\n");
        return 1;
    }

    double library_sin = sin(x);
    int iterations;
    double taylor_sin_value = taylor_sin(x, &iterations);

    printf("sin(x) за допомогою бібліотечної функції: %.10lf\n", library_sin);
    printf("sin(x) за допомогою ряду Тейлора: %.10lf\n", taylor_sin_value);
    printf("Кількість ітерацій: %d\n", iterations);

    return 0;
}

